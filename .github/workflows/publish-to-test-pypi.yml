# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Publish Python distributions ðŸ“¦ to TestPyPI

on:
  push:
    branches:
      - dev

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout dev branch
        uses: actions/checkout@v2
        with:
          ref: dev
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install OS dependencies
        run: |
          sudo apt-get install -y rename
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          build=0
          version=$(ls dist/*tar.gz | grep -Po '\d.\d.\d')
          export oldbuild=$version
          check=$(twine upload --repository testpypi dist/* > /dev/null 2>&1)$? || true
          while [[ "$check" == "1" ]]
          do
              build=$((build+1))
              export newbuild=$version"-"$build
              echo "Build number $newbuild"
              rename 's/$ENV{oldbuild}/$ENV{newbuild}/g' dist/*
              export oldbuild=$newbuild
              check=$(twine upload --repository testpypi dist/* > /dev/null 2>&1)$? || true
          done
